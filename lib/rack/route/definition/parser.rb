#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'rack/route/definition/parser_extras'
module Rack
  module Route
    module Definition
      class Parser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     2,     2,     2,     4,     4,     4,    10,    11,    13,     4,
    16,    17,     4 ]

racc_action_check = [
     0,     6,     4,     0,     6,     4,     2,     2,     5,     1,
    12,    13,    14 ]

racc_action_pointer = [
    -2,     4,     3,   nil,     0,     8,    -1,   nil,   nil,   nil,
   nil,   nil,     4,    11,     7,   nil,   nil,   nil ]

racc_action_default = [
   -13,    -4,    -7,    -9,   -13,   -13,    -3,    -8,    -5,    -6,
   -12,   -11,   -13,   -13,    -2,    -1,   -10,    18 ]

racc_goto_table = [
     7,     5,    14,     9,     8,    12,   nil,    15,   nil,   nil,
   nil,   nil,   nil,     7 ]

racc_goto_check = [
     6,     1,     3,     5,     4,     1,   nil,     1,   nil,   nil,
   nil,   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,     1,   nil,    -4,     2,     1,    -1 ]

racc_goto_default = [
   nil,   nil,     6,     1,   nil,   nil,     3 ]

racc_reduce_table = [
  0, 0, :racc_error,
  2, 9, :_reduce_1,
  2, 9, :_reduce_2,
  1, 9, :_reduce_3,
  1, 9, :_reduce_4,
  2, 10, :_reduce_5,
  2, 10, :_reduce_6,
  1, 10, :_reduce_7,
  2, 11, :_reduce_8,
  1, 11, :_reduce_none,
  3, 14, :_reduce_10,
  1, 13, :_reduce_11,
  1, 12, :_reduce_12 ]

racc_reduce_n = 13

racc_shift_n = 18

racc_token_table = {
  false => 0,
  :error => 1,
  :SLASH => 2,
  :LITERAL => 3,
  :SYMBOL => 4,
  :LPAREN => 5,
  :RPAREN => 6,
  :DOT => 7 }

racc_nt_base = 8

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SLASH",
  "LITERAL",
  "SYMBOL",
  "LPAREN",
  "RPAREN",
  "DOT",
  "$start",
  "path",
  "segment",
  "groups",
  "literal",
  "symbol",
  "group" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
 result = Node.new(:PATH, val) 
    result
end

def _reduce_2(val, _values, result)
 result = Node.new(:PATH, val.flatten) 
    result
end

def _reduce_3(val, _values, result)
 result = Node.new(:PATH, val) 
    result
end

def _reduce_4(val, _values, result)
 result = Node.new(:PATH, val.flatten) 
    result
end

def _reduce_5(val, _values, result)
 result = Node.new(:SEGMENT, [val.last]) 
    result
end

def _reduce_6(val, _values, result)
 result = Node.new(:SEGMENT, [val.last]) 
    result
end

def _reduce_7(val, _values, result)
 result = Node.new(:SEGMENT, []) 
    result
end

def _reduce_8(val, _values, result)
 result = val.flatten 
    result
end

# reduce 9 omitted

def _reduce_10(val, _values, result)
 result = Node.new(:GROUP, val[1]) 
    result
end

def _reduce_11(val, _values, result)
 result = Node.new(:SYMBOL, val.first) 
    result
end

def _reduce_12(val, _values, result)
 result = Node.new(:LITERAL, val.first) 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

      end   # class Parser
      end   # module Definition
    end   # module Route
  end   # module Rack
