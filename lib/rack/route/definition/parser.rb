#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.6
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'rack/router/definition/parser_extras'
module Rack
  module Router
    module Definition
      class Parser < Racc::Parser
##### State transition tables begin ###

racc_action_table = [
     1,     3,     4 ]

racc_action_check = [
     0,     2,     3 ]

racc_action_pointer = [
    -2,   nil,     1,     2,   nil ]

racc_action_default = [
    -2,    -1,    -2,    -2,     5 ]

racc_goto_table = [
     2 ]

racc_goto_check = [
     1 ]

racc_goto_pointer = [
   nil,     0 ]

racc_goto_default = [
   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 9, :_reduce_1 ]

racc_reduce_n = 2

racc_shift_n = 5

racc_token_table = {
  false => 0,
  :error => 1,
  :SLASH => 2,
  :LITERAL => 3,
  :SYMBOL => 4,
  :LPAREN => 5,
  :RPAREN => 6,
  :DOT => 7 }

racc_nt_base = 8

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "SLASH",
  "LITERAL",
  "SYMBOL",
  "LPAREN",
  "RPAREN",
  "DOT",
  "$start",
  "pattern" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

def _reduce_1(val, _values, result)
 Nodes::Pattern.new 
    result
end

def _reduce_none(val, _values, result)
  val[0]
end

      end   # class Parser
      end   # module Definition
    end   # module Router
  end   # module Rack
